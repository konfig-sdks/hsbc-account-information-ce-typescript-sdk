/*
Account Information API

In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319)


The version of the OpenAPI document: 3.1.11


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { OtherFeeTypeProperty3Inner } from './other-fee-type-property3-inner';

/**
 * Details about any caps (maximum charges) that apply to a particular or group of fee/charge
 * @export
 * @interface FeeChargeCapPropertyInner1
 */
export interface FeeChargeCapPropertyInner1 {
    /**
     * Fee/charge type which is being capped
     * @type {Array<string>}
     * @memberof FeeChargeCapPropertyInner1
     */
    'FeeType': Array<FeeChargeCapPropertyInner1FeeTypeEnum>;
    /**
     * Min Max type
     * @type {string}
     * @memberof FeeChargeCapPropertyInner1
     */
    'MinMaxType': FeeChargeCapPropertyInner1MinMaxTypeEnum;
    /**
     * fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount
     * @type {number}
     * @memberof FeeChargeCapPropertyInner1
     */
    'FeeCapOccurrence'?: number;
    /**
     * Cap amount charged for a fee/charge (where it is charged in terms of an amount rather than a rate)
     * @type {string}
     * @memberof FeeChargeCapPropertyInner1
     */
    'FeeCapAmount'?: string;
    /**
     * Period e.g. day, week, month etc. for which the fee/charge is capped
     * @type {string}
     * @memberof FeeChargeCapPropertyInner1
     */
    'CappingPeriod'?: FeeChargeCapPropertyInner1CappingPeriodEnum;
    /**
     * Free text for adding  extra details for fee charge cap
     * @type {Array<string>}
     * @memberof FeeChargeCapPropertyInner1
     */
    'Notes'?: Array<string>;
    /**
     * Other fee type code which is not available in the standard code set
     * @type {Array<OtherFeeTypeProperty3Inner>}
     * @memberof FeeChargeCapPropertyInner1
     */
    'OtherFeeType'?: Array<OtherFeeTypeProperty3Inner>;
}

type FeeChargeCapPropertyInner1FeeTypeEnum = 'Other' | 'ServiceCAccountFee' | 'ServiceCAccountFeeMonthly' | 'ServiceCAccountFeeQuarterly' | 'ServiceCFixedTariff' | 'ServiceCBusiDepAccBreakage' | 'ServiceCMinimumMonthlyFee' | 'ServiceCOther'
type FeeChargeCapPropertyInner1MinMaxTypeEnum = 'Minimum' | 'Maximum'
type FeeChargeCapPropertyInner1CappingPeriodEnum = 'Day' | 'Half Year' | 'Month' | 'Quarter' | 'Week' | 'Year'


