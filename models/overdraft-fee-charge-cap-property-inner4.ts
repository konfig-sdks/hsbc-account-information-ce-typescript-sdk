/*
Account Information API

In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319)


The version of the OpenAPI document: 3.1.11


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { OtherFeeTypeProperty3Inner1 } from './other-fee-type-property3-inner1';

/**
 * Details about any caps (maximum charges) that apply to a particular fee/charge
 * @export
 * @interface OverdraftFeeChargeCapPropertyInner4
 */
export interface OverdraftFeeChargeCapPropertyInner4 {
    /**
     * Fee/charge type which is being capped
     * @type {Array<string>}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'FeeType': Array<OverdraftFeeChargeCapPropertyInner4FeeTypeEnum>;
    /**
     * Specifies for the overdraft control feature/benefit
     * @type {boolean}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'OverdraftControlIndicator'?: boolean;
    /**
     * Indicates that this is the minimum/ maximum fee/charge that can be applied by the financial institution
     * @type {string}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'MinMaxType': OverdraftFeeChargeCapPropertyInner4MinMaxTypeEnum;
    /**
     * fee/charges are captured dependent on the number of occurrences rather than capped at a particular amount
     * @type {number}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'FeeCapOccurrence'?: number;
    /**
     * Cap amount charged for a fee/charge
     * @type {string}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'FeeCapAmount'?: string;
    /**
     * Period e.g. day, week, month etc. for which the fee/charge is capped
     * @type {string}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'CappingPeriod'?: OverdraftFeeChargeCapPropertyInner4CappingPeriodEnum;
    /**
     * Notes related to Overdraft fee charge cap
     * @type {Array<string>}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'Notes'?: Array<string>;
    /**
     * Other fee type code which is not available in the standard code set
     * @type {Array<OtherFeeTypeProperty3Inner1>}
     * @memberof OverdraftFeeChargeCapPropertyInner4
     */
    'OtherFeeType'?: Array<OtherFeeTypeProperty3Inner1>;
}

type OverdraftFeeChargeCapPropertyInner4FeeTypeEnum = 'ArrangedOverdraft' | 'EmergencyBorrowing' | 'BorrowingItem' | 'OverdraftRenewal' | 'AnnualReview' | 'OverdraftSetup' | 'Surcharge' | 'TempOverdraft' | 'UnauthorisedBorrowing' | 'UnauthorisedPaidTrans' | 'Other' | 'UnauthorisedUnpaidTrans'
type OverdraftFeeChargeCapPropertyInner4MinMaxTypeEnum = 'Minimum' | 'Maximum'
type OverdraftFeeChargeCapPropertyInner4CappingPeriodEnum = 'AcademicTerm' | 'Day' | 'Half Year' | 'Month' | 'Quarter' | 'Week' | 'Year'


