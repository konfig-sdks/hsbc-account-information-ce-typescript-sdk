/*
Account Information API

In this document, you'll find the steps your organization needs to take to use our API services. Included in this guide are details of request and response messages used to support your organization’s integration. The intended audience for this document are **Technical Architects**, **Development Engineers**, **Test Engineers**, and **Operation & Maintenance Engineers** involved in development and support of your organization’s integration. Setting up our API Services is best completed with the assistance of your organization’s IT team, or someone with experience and knowledge of application programming interfaces. This should include experience with **JSON payloads**, **security** and **public key infrastructure (PKI)**. This Document describes the following request and response structure of HSBCnet - Account Information API. For detail implementation guidelines, please refer to the respective section from [develop.hsbc.com](https://develop.hsbc.com/ob-api-documentation/account-information-uk-personal-v319)


The version of the OpenAPI document: 3.1.11


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AccountAccessConsentsApi,
  AccountsApi,
  BalancesApi,
  BeneficiariesApi,
  DirectDebitsApi,
  PartiesApi,
  ProductsApi,
  ScheduledPaymentsApi,
  StandingOrdersApi,
  TransactionsApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { HsbcAccountInformationCeCustom } from "./client-custom";

export class HsbcAccountInformationCe extends HsbcAccountInformationCeCustom {
  readonly accountAccessConsents: AccountAccessConsentsApi;
  readonly accounts: AccountsApi;
  readonly balances: BalancesApi;
  readonly beneficiaries: BeneficiariesApi;
  readonly directDebits: DirectDebitsApi;
  readonly parties: PartiesApi;
  readonly products: ProductsApi;
  readonly scheduledPayments: ScheduledPaymentsApi;
  readonly standingOrders: StandingOrdersApi;
  readonly transactions: TransactionsApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.accountAccessConsents = new AccountAccessConsentsApi(configuration);
    this.accounts = new AccountsApi(configuration);
    this.balances = new BalancesApi(configuration);
    this.beneficiaries = new BeneficiariesApi(configuration);
    this.directDebits = new DirectDebitsApi(configuration);
    this.parties = new PartiesApi(configuration);
    this.products = new ProductsApi(configuration);
    this.scheduledPayments = new ScheduledPaymentsApi(configuration);
    this.standingOrders = new StandingOrdersApi(configuration);
    this.transactions = new TransactionsApi(configuration);
  }

}
